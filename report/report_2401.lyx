#LyX 1.6.2 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage[top=2cm,bottom=2cm,left=2cm,right=2cm]{geometry}
\end_preamble
\use_default_options true
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Title

\lang french
Rapport final
\begin_inset Newline newline
\end_inset

Microprocesseur i<3bf++
\end_layout

\begin_layout Date

\lang french
Dimanche 24 Janvier 2016
\end_layout

\begin_layout Author

\noun on
\lang french
Mihai Dusmanu, Clément Pascutto
\end_layout

\begin_layout Part*

\lang french
Utilisation
\end_layout

\begin_layout Section*

\lang french
Structure
\end_layout

\begin_layout Standard
\noindent

\lang french
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="center" valignment="middle" width="15text%">
<column alignment="center" valignment="middle" width="78text%">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
Dossier
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
Contenu
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
sim
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Contient les fichiers du simulateur de netlists
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
asm
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
Contient le compilateur d'assembleur vers binaire
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
clk
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
Contient les codes assembleurs de la montre digitale et quelques scripts
 auxiliaires
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
cpu
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Contient le processeur au format minijazz et la ROM de routage des instructions
 (voir architecture)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
mjc
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
Contient le compilateur de minijazz vers netlist
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section*

\lang french
Compilation
\end_layout

\begin_layout Standard
\noindent

\lang french
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features>
<column alignment="center" valignment="middle" width="15text%">
<column alignment="center" valignment="middle" width="78text%">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
Instruction
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
Effet
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
make
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Compile l'assembleur, le simulateur et le processeur
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
make asm
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Compile uniquement l'assembleur
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
make sim
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Compile uniquement le simulateur
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
make cpu
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Compile uniquement le processeur
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section*
Éxécution
\end_layout

\begin_layout Standard
Attention : l'affichage graphique nécessite le module 
\family typewriter
tkinker
\family default
 de python.
 Le package est disponible sous le nom 
\family typewriter
python3-tk
\family default
.
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Standard
\noindent

\lang french
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features>
<column alignment="center" valignment="middle" width="30text%">
<column alignment="center" valignment="middle" width="63text%">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
Instruction
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
Effet
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
./run_clock.sh
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Simule la montre en temps réel
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
./run_clock.sh fast
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Simule la montre en accéléré
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Standard
Pour lancer une simulation sur un autre programme, il faut :
\end_layout

\begin_layout Itemize
créer une ROM qui contient le programme à éxécuter : 
\family typewriter
./create_rom.sh filename.bfpp
\end_layout

\begin_layout Itemize
lancer la simulation : 
\family typewriter
make run steps=<nombre de cycles à simuler>
\end_layout

\begin_layout Part*
Processeur
\end_layout

\begin_layout Section*

\lang french
Quelques choix sur les données
\end_layout

\begin_layout Standard

\lang french
La taille des mots choisie pour le processeur est de 16 bits ; les entiers
 sont représentés en 
\emph on
Big Endian
\emph default
 et sont non signés.
\end_layout

\begin_layout Section*

\lang french
Assembleur
\end_layout

\begin_layout Subsection*

\lang french
Brainfuck
\end_layout

\begin_layout Standard

\lang french
On reprend les instructions du langage brainfuck de 1993 : le processeur
 de départ est une machine à compteurs.
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Standard
\noindent

\lang french
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="2">
<features>
<column alignment="center" valignment="middle" width="15text%">
<column alignment="center" valignment="middle" width="78text%">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
Instruction
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
Effet
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
\begin_inset Formula $>$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
Incrémente le pointeur de données
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
\begin_inset Formula $<$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
Décrémente le pointeur de données
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
\begin_inset Formula $+$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
Incrémente le compteur courant
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
\begin_inset Formula $-$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
Décrémente le compteur courant
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
\begin_inset Formula $,$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
Affiche la valeur du compteur courant
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
\begin_inset Formula $.$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
Lit et enregistre une valeur dans le compteur courant
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
\begin_inset Formula $[$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
Saute à l'instruction après le 
\begin_inset Formula $]$
\end_inset

 correspondant si la valeur du compteur courant est nulle, sinon saute à
 l'instruction suivante
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
\begin_inset Formula $]$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
Retourne à l'instruction 
\begin_inset Formula $[$
\end_inset

 correspondante
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection*

\lang french
Améliorations : bf++
\end_layout

\begin_layout Standard
\align block

\lang french
Pour améliorer l'efficacité du processeur, on ajoute des fonctionalités
 rétro-compatibles qui seront implémentées directement en hardware, sans
 ajouter d'instructions.
 Elles permettent également de rendre le code plus lisible.
\end_layout

\begin_layout Standard
\align block

\lang french
Dans le tableau suivant, 
\begin_inset Formula $(ch)$
\end_inset

 est un caractère de 
\begin_inset Formula $\left\{ <,>,+,-\right\} $
\end_inset

.
\end_layout

\begin_layout Standard
\align block

\lang french
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Standard
\noindent

\lang french
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="4">
<features>
<column alignment="center" valignment="middle" width="15text%">
<column alignment="center" valignment="middle" width="19.5text%">
<column alignment="center" valignment="middle" width="23text%">
<column alignment="center" valignment="middle" width="28text%">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
Instruction
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
Condition
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
Effet
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
Exemple
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
\begin_inset Formula $n(ch)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
\begin_inset Formula $n\in\mathbb{N}$
\end_inset


\end_layout

\begin_layout Plain Layout

\lang french
\begin_inset Formula $0\leq n<2^{16}$
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
\begin_inset Formula $n$
\end_inset

 fois 
\begin_inset Formula $(ch)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
\begin_inset Formula $15+$
\end_inset

 ajoute 
\begin_inset Formula $15$
\end_inset

 au compteur courant 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
\begin_inset Formula $\#(ch)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
\begin_inset Formula $k$
\end_inset

 fois 
\begin_inset Formula $(ch)$
\end_inset

,
\end_layout

\begin_layout Plain Layout

\lang french
où 
\begin_inset Formula $k$
\end_inset

 est la valeur du compteur courant
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
si la valeur du compteur courant est 
\begin_inset Formula $6$
\end_inset

, 
\begin_inset Formula $\#+$
\end_inset

 ajoute 
\begin_inset Formula $6$
\end_inset

 à ce compteur
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
\begin_inset Formula $\$(ch)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
\begin_inset Formula $k$
\end_inset

 fois 
\begin_inset Formula $(ch)$
\end_inset

, 
\end_layout

\begin_layout Plain Layout

\lang french
où 
\begin_inset Formula $k$
\end_inset

 est la dernière valeur calculée par un 
\begin_inset Formula $\#$
\end_inset

, par défaut 
\begin_inset Formula $0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
si la mémoire est 
\begin_inset Formula $(4,0,0,0,0)$
\end_inset

, et le compteur courant est le premier, 
\begin_inset Formula $\#>\$+$
\end_inset

 transforme la mémoire en 
\begin_inset Formula $(4,0,0,0,4)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section*

\lang french
Architecture
\end_layout

\begin_layout Subsection*

\lang french
Architecture générale
\end_layout

\begin_layout Standard

\lang french
Le microprocesseur est constitué des composants suivants :
\end_layout

\begin_layout Itemize

\lang french
Une mémoire ROM contenant les instructions du programme (voir paragraphe
 suivant pour l'encodage).
\end_layout

\begin_layout Itemize

\lang french
Une table de routage composée d'une ROM qui convertit les instructions en
 bits de contrôle pour les autres composants.
\end_layout

\begin_layout Itemize

\lang french
Une unité arithmétique (UA) capable d'effectuer les opérations PLUS et MOINS.
\end_layout

\begin_layout Itemize

\lang french
Une mémoire RAM contenant 
\begin_inset Formula $2^{16}$
\end_inset

 compteurs.
\end_layout

\begin_layout Itemize

\lang french
Un pointeur indiquant l'adresse du compteur courant dans la RAM.
\end_layout

\begin_layout Itemize

\lang french
Un pointeur indiquant l'adresse de l'instruction courante dans la ROM du
 programme relié à un incrémenteur conditionnel.
\end_layout

\begin_layout Itemize

\lang french
Une RAM de taille 1 contenant la valeur du dernier 
\begin_inset Formula $\#$
\end_inset

 calculé.
\end_layout

\begin_layout Itemize

\lang french
Un entrée sur 16 bits, prise en compte seulement lorsque l'instruction courante
 est la lecture.
\end_layout

\begin_layout Itemize

\lang french
Une sortie sur 16 bits, qui vaut 
\begin_inset Formula $2^{16}-1$
\end_inset

 si l'instruction courante n'est pas une instruction PRINT, et qui vaut
 la valeur du compteur courant sinon.
\end_layout

\begin_layout Subsection*

\lang french
Flags
\end_layout

\begin_layout Standard

\lang french
L'UA est capable de lever plusieurs flags :
\end_layout

\begin_layout Itemize

\lang french
Overflow
\end_layout

\begin_layout Itemize

\lang french
Underflow
\end_layout

\begin_layout Itemize

\lang french
Zero : contient si le résultat de la dernière opération est égal à 
\begin_inset Formula $0$
\end_inset

.
\end_layout

\begin_layout Subsection*

\lang french
Encodage des instructions (compilation de l'assembleur)
\end_layout

\begin_layout Standard

\lang french
Les instructions stockées dans la ROM sont des mots de 20 bits :
\end_layout

\begin_layout Itemize

\lang french
3 bits sont réservés à l'encodage des 8 opérations de base qui sont encodées
 de façon à faciliter le routage :
\begin_inset Newline newline
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="8">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
>
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
<
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
+
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
[
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
,
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
001
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
010
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
011
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
100
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
101
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
110
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\lang french
111
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Itemize

\lang french
1 bit est réservé à la reconnaissance des caractère 
\begin_inset Formula $\#$
\end_inset

 et 
\begin_inset Formula $\$$
\end_inset

.
\begin_inset Newline newline
\end_inset

Ce bit vaut 1 si l'un des deux caractères est présent.
 L'argument vaut alors dans ce cas 
\begin_inset Formula $0$
\end_inset

 si 
\begin_inset Formula $\#$
\end_inset

 est présent, et 
\begin_inset Formula $2^{15}$
\end_inset

 si 
\begin_inset Formula $\$$
\end_inset

 est présent.
\begin_inset Newline newline
\end_inset

Si le bit de contrôle vaut 0, le paramètre vaut l'argument de l'instruction.
\end_layout

\begin_layout Itemize

\lang french
16 bits de paramètres sont réservés à l'argument de l'instruction (
\begin_inset Formula $16$
\end_inset

 dans 
\begin_inset Formula $16>$
\end_inset

).
\end_layout

\begin_layout Standard

\lang french
Afin d'éxécuter l'opération 
\begin_inset Formula $[$
\end_inset

 correctement, on la précèdera dans la compilation par un instruction 
\begin_inset Formula $0+$
\end_inset

, qui ne modifie pas les données mais calcule le flag Zero qui sert de condition
 de jump.
\end_layout

\begin_layout Standard

\lang french
De même, pour effectuer correctement 
\begin_inset Formula $\#+$
\end_inset

, on le compile par 
\begin_inset Formula $\#+\$+$
\end_inset

, la première partie 
\begin_inset Formula $\#+$
\end_inset

 servant à la mise à jour du RAM contenant la valeur de 
\begin_inset Formula $\$$
\end_inset

, sans modifier les données.
\end_layout

\begin_layout Part*

\lang french
Simulateur
\end_layout

\begin_layout Standard

\lang french
Le simulateur utilisé est un mélange des points forts de nos deux simulateurs
 initiaux, et il est maintenant jusqu'à 50% plus rapide sur les cas de tests.
\end_layout

\begin_layout Standard
Outre les améliorations que vous nous avez suggérées, nous gérons maintenant
 les nappes de fils non plus comme des tableaux mais comme des ints, qui
 permettent des opérations sur les bits plus rapides que sur les tableaux.
 Ceci élimine également les copies de tableaux inutiles.
 Cependant, cela limite la taille des nappes de fils à 63 fils (ce qui est
 amplement suffisant pour notre processeur, qui comporte des nappes de taille
 20 au maximum).
\end_layout

\begin_layout Standard
Un fichier 
\family typewriter
README.md
\family default
 est disponible dans 
\family typewriter
./sim/
\family default
 pour plus d'informations sur le simulateur.
\end_layout

\begin_layout Part*
Programme de la montre
\end_layout

\begin_layout Standard
Afin de faciliter les comparaisons, notre programme représente les valeurs
 des secondes, minutes, heures, jours et mois comme le complément à leur
 valeur maximale, on ne fait ainsi que des comparaisons à 0.
\end_layout

\begin_layout Standard
Dans la version en temps réel, la montre attend une entrée spécifique (0
 ou 1) de la part du simulateur, puis inverse le bit attendu et poursuit
 l'éxécution du code.
 Le simulateur oscille entre 0 et 1 avec une période de 2 secondes.
 De cette manière, une seconde n'est simulée que toutes les secondes réelles.
\end_layout

\begin_layout Standard
Nous présenterons le code plus en détails lors de la présentation orale.
\end_layout

\end_body
\end_document
